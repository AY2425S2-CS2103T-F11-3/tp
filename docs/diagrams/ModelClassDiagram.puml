@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor MODEL_COLOR
skinparam classBackgroundColor MODEL_COLOR

package Model {
    interface "<<interface>>\nReadOnlyAddressBook" as ReadOnlyAddressBook
    interface "<<interface>>\nReadOnlyUserPrefs" as ReadOnlyUserPrefs
    interface "<<interface>>\nReadOnlyArchivedBook" as ReadOnlyArchivedBook
    interface "<<interface>>\nModel" as Model {
        + setUserPrefs(userPrefs: ReadOnlyUserPrefs)
        + getUserPrefs(): ReadOnlyUserPrefs
        + getGuiSettings(): GuiSettings
        + setGuiSettings(guiSettings: GuiSettings)
        + getAddressBookFilePath(): Path
        + setAddressBookFilePath(path: Path)
        + setAddressBook(addressBook: ReadOnlyAddressBook)
        + getAddressBook(): ReadOnlyAddressBook
        + hasPerson(person: Person): boolean
        + deletePerson(target: Person)
        + addPerson(person: Person)
        + addEmergencyContactToPerson(person: Person, emergencyPerson: EmergencyPerson)
        + setPerson(target: Person, editedPerson: Person)
        + findPersonByName(name: Name): Optional<Person>
        + addTagsToPerson(person: Person, tagsToAdd: Set<Tag>): Person
        + deleteTagFromPerson(person: Person, tagToDelete: Set<Tag>): Person
        + editTagForPerson(person: Person, oldTag: Tag, newTag: Tag): Person
        + getFilteredPersonList(): ObservableList<Person>
        + updateFilteredPersonList(predicate: Predicate<Person>)
        + hasSchedule(appointment: Appointment): boolean
        + sortPersonListByName()
        + sortPersonListByAppointment()
    }

    class VersionedAddressBook
    class ModelManager
    class UserPrefs
    class UniquePersonList
    class ArchivedBook

    class Person {
        - name: Name
        - phone: Phone
        - email: Email
        - address: Address
        - tags: Set<Tag>
        - emergencyPerson: EmergencyPerson
        - appointment: Appointment
    }
    class Address
    class Email
    class Name
    class Phone
    class Tag

    ' EmergencyPerson now explicitly stores its details.
    class EmergencyPerson {
        - name: String
        - phone: String
        - relationship: Relationship
    }
    ' Appointment now contains a DateTime field.
    class Appointment {
        - dateTime: DateTime
    }
    class DateTime
    class Relationship

    class GuiSettings

    ' Associations and Inheritance:
    VersionedAddressBook .up.|> ReadOnlyAddressBook
    ArchivedBook .up.|> ReadOnlyArchivedBook
    ModelManager .up.|> Model
    UserPrefs .up.|> ReadOnlyUserPrefs

    ModelManager --> "1" VersionedAddressBook
    ModelManager --> "1" UserPrefs
    ModelManager --> "1" ArchivedBook

    VersionedAddressBook *--> "1" UniquePersonList
    ArchivedBook *--> "1" UniquePersonList
    UniquePersonList --> "0..*" Person

    Person *--> Name
    Person *--> Phone
    Person *--> Email
    Person *--> Address
    Person *--> "*" Tag
    Person *--> "0..1" EmergencyPerson
    Person *--> "0..1" Appointment

    Appointment *--> "1" DateTime
    EmergencyPerson *--> "1" Relationship
    EmergencyPerson *--> "1" Name
    EmergencyPerson *--> "1" Phone

    ModelManager --> Person
}
@enduml
